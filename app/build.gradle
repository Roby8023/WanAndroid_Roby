apply plugin: 'com.android.application'
apply plugin: 'realm-android'

apply from: "../module.gradle"

android {
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        renderscriptSupportModeEnabled true
        ndk {
            abiFilters /*'armeabi' ,*/ 'armeabi-v7a'/*, 'arm64-v8a'*/
        }
    }
    buildTypes {
        Properties properties = new Properties()
        InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
        properties.load(inputStream)
        def APPID_BUGLY = properties.getProperty('APPID_BUGLY')
        def WANPWD_FORMAT = properties.getProperty('WANPWD_FORMAT')
        def WANPWD_PATTERN = properties.getProperty('WANPWD_PATTERN')
        def WANPWD_TYPE_QQ = properties.getProperty('WANPWD_TYPE_QQ')
        def WANPWD_TYPE_FESTIVAL = properties.getProperty('WANPWD_TYPE_FESTIVAL')
        def WANPWD_TYPE_USERPAGE = properties.getProperty('WANPWD_TYPE_USERPAGE')
        def WANPWD_TYPE_CDKEY = properties.getProperty('WANPWD_TYPE_CDKEY')
        def WANPWD_TYPE_WEB = properties.getProperty('WANPWD_TYPE_WEB')
        def WANPWD_TYPE_ABOUTME = properties.getProperty('WANPWD_TYPE_ABOUTME')

        release {
            buildConfigField "String", "APPID_BUGLY", '"' + APPID_BUGLY + '"'
            buildConfigField "String", "WANPWD_FORMAT", '"' + WANPWD_FORMAT + '"'
            buildConfigField "String", "WANPWD_PATTERN", '"' + WANPWD_PATTERN + '"'
            buildConfigField "String", "WANPWD_TYPE_QQ", '"' + WANPWD_TYPE_QQ + '"'
            buildConfigField "String", "WANPWD_TYPE_FESTIVAL", '"' + WANPWD_TYPE_FESTIVAL + '"'
            buildConfigField "String", "WANPWD_TYPE_USERPAGE", '"' + WANPWD_TYPE_USERPAGE + '"'
            buildConfigField "String", "WANPWD_TYPE_CDKEY", '"' + WANPWD_TYPE_CDKEY + '"'
            buildConfigField "String", "WANPWD_TYPE_WEB", '"' + WANPWD_TYPE_WEB + '"'
            buildConfigField "String", "WANPWD_TYPE_ABOUTME", '"' + WANPWD_TYPE_ABOUTME + '"'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFileName = "$applicationId-v${defaultConfig.versionName}.apk"
                }
            }
        }
        debug {
            buildConfigField "String", "APPID_BUGLY", '"' + APPID_BUGLY + '"'
            buildConfigField "String", "WANPWD_FORMAT", '"' + WANPWD_FORMAT + '"'
            buildConfigField "String", "WANPWD_PATTERN", '"' + WANPWD_PATTERN + '"'
            buildConfigField "String", "WANPWD_TYPE_QQ", '"' + WANPWD_TYPE_QQ + '"'
            buildConfigField "String", "WANPWD_TYPE_FESTIVAL", '"' + WANPWD_TYPE_FESTIVAL + '"'
            buildConfigField "String", "WANPWD_TYPE_USERPAGE", '"' + WANPWD_TYPE_USERPAGE + '"'
            buildConfigField "String", "WANPWD_TYPE_CDKEY", '"' + WANPWD_TYPE_CDKEY + '"'
            buildConfigField "String", "WANPWD_TYPE_WEB", '"' + WANPWD_TYPE_WEB + '"'
            buildConfigField "String", "WANPWD_TYPE_ABOUTME", '"' + WANPWD_TYPE_ABOUTME + '"'
        }
    }
    resourcePrefix ""
}

dependencies {
    annotationProcessor rootProject.ext.dependencies.butterknifeCompiler
    implementation rootProject.ext.dependencies.cardview
    implementation rootProject.ext.dependencies.flexbox
    implementation rootProject.ext.dependencies.realtimeBlurView
    implementation rootProject.ext.dependencies.agentWeb
    implementation rootProject.ext.dependencies.banner
    implementation rootProject.ext.dependencies.persistentCookieJar
    implementation rootProject.ext.dependencies.revealLayout
    implementation rootProject.ext.dependencies.keyboardCompat
    implementation rootProject.ext.dependencies.swipelayout
    implementation rootProject.ext.dependencies.disklrucache
    implementation rootProject.ext.dependencies.multiStateView
    implementation rootProject.ext.dependencies.pictureSelector
    implementation rootProject.ext.dependencies.buglyCrashreport
    implementation rootProject.ext.dependencies.crashActivity
    implementation rootProject.ext.dependencies.heartView
    implementation rootProject.ext.dependencies.zxingLibrary
    implementation rootProject.ext.dependencies.tbs
}
